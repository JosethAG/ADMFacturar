@using ADM.Models
@model AbonoCXP

@{
    var abonos = ViewData["Abonos"] as List<AbonoCXP>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ingreso de Abonos</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="~/css/custom.css" rel="stylesheet" />
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>

    <form asp-action="CrearAbono" method="post" class="max-w-4xl mx-auto p-6 bg-gray-800 rounded-md" id="formcreate">
        <div class="border-b border-gray-700 pb-6">
            <h2 class="text-lg font-semibold leading-7 text-white">Creación de nuevo Abono</h2>
        </div>
        <div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-2 lg:grid-cols-3">

            <div>
                <label for="Numero_Recibo" class="block text-sm font-medium text-gray-300">Número Recibo</label>
                <div class="mt-2">
                    <input asp-for="Numero_Recibo" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>


            <div>
                <label for="FK_Documento" class="block text-sm font-medium text-gray-300">Documento</label>
                <div class="mt-2">
                    <input asp-for="FK_Documento" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>

            <div>
                <label for="Fecha_Abono" class="block text-sm font-medium text-gray-300">Fecha de Abono</label>
                <div class="mt-2">
                    <input asp-for="Fecha_Abono" type="date" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>

            <div>
                <label for="Monto_Abonado" class="block text-sm font-medium text-gray-300">Monto Abonado</label>
                <div class="mt-2">
                    <input asp-for="Monto_Abonado" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>

            <div>
                <label for="Tipo_Documento" class="block text-sm font-medium text-gray-300">Tipo Documento</label>
                <div class="mt-2">
                    <select asp-for="Tipo_Documento" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                        <option value="Factura">Factura</option>
                        <option value="Sinpe">Sinpe</option>
                        <option value="Transferencia">Transferencia</option>
                        <option value="Cheque">Cheque</option>
                    </select>
                </div>
            </div>
            <div>
                <label for="Banco" class="block text-sm font-medium text-gray-300">Banco</label>
                <div class="mt-2">
                    <input asp-for="Banco" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>
            <div style="display: none;">
                <label for="FK_Proveedor" class="block text-sm font-medium text-gray-300">Proveedor</label>
                <div class="mt-2">
                    <input asp-for="FK_Proveedor" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500" readonly>
                </div>
            </div>

        </div>
        <div class="mt-6 flex justify-end gap-x-4">
            <input asp-for="FK_Usuario_Creacion" value="1" type="hidden" />
            <input asp-for="FK_Usuario_Modificacion" value="1" type="hidden" />
            <button type="submit" id="btnGuardar" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Guardar</button>
            <button asp-action="Index" class="rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-500">Cancelar</button>
        </div>
    </form>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        // Función para mostrar las alertas según el resultado de la validación
        function mostrarAlerta(resultado) {
            if (resultado === "1") {
                Swal.fire({
                    icon: 'success',
                    title: 'Éxito',
                    text: 'El abono se ha creado correctamente.',
                    showConfirmButton: false,
                    timer: 2000
                }).then(() => {
                    window.location.href = '@Url.Action("Index", "Home")'; // Redirigir a la página de inicio o donde corresponda
                });
            } else if (resultado === "2") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'El monto abonado es mayor que el saldo pendiente.',
                    confirmButtonText: 'OK'
                });
            } else if (resultado === "3") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'El saldo pendiente es menor o igual a cero.',
                    confirmButtonText: 'OK'
                });
            } else if (resultado === "4") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'El monto abonado es un número negativo.',
                    confirmButtonText: 'OK'
                });
            } else if (resultado === "5") {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'El saldo pendiente es igual a cero.',
                    confirmButtonText: 'OK'
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Error desconocido al crear el abono.',
                    confirmButtonText: 'OK'
                });
            }
        }

        // Escuchar el evento submit del formulario
        document.getElementById('formcreate').addEventListener('submit', function (event) {
            event.preventDefault(); // Evitar que el formulario se envíe automáticamente

            // Obtener el formulario
            var form = event.target;

            // Validar el formulario
            if (form.checkValidity()) {
                // Obtener los datos del formulario
                var formData = new FormData(form);

                // Realizar la petición AJAX o enviar el formulario según sea necesario
                fetch(form.action, {
                    method: form.method,
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        mostrarAlerta(data); // Mostrar alerta según el resultado de la validación
                    })
                    .catch(error => {
                        console.error('Error al realizar la solicitud:', error);
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error al comunicarse con el servidor.',
                            confirmButtonText: 'OK'
                        });
                    });
            } else {
                form.reportValidity(); // Mostrar mensajes de validación del formulario
            }
        });
    </script>
</body>
</html>