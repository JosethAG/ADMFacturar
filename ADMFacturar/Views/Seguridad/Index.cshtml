@using ADM.Models
@model Usuario

@{
    var usuarios = ViewData["Usuarios"] as List<Usuario>;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ingreso de Usuarios</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="~/css/custom.css" rel="stylesheet" />
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- Tabla Paginar  -->
    <link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
</head>
<body>
    <div class="w-full">
    </div>

    <!-- Formulario -->
    <form>
        <div class="bg-gray-800 text-white p-5 rounded-lg shadow-lg">
            <h2 class="text-lg font-bold mb-4">Filtro de Seguridad</h2>
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-6">
                <div class="sm:col-span-1">
                    <label for="usuario" class="block text-sm font-medium leading-6 text-white">Usuario</label>
                    <div class="mt-1">
                        <input type="text" id="usuario" name="usuario" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6">
                    </div>
                </div>
            </div>
        </div>
    </form>
    <!-- Final de Formulario -->

   <div class="w-full mt-8 bg-gray-800 p-6 rounded-lg shadow-lg">
    <div class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-t-lg">
        <h3 class="text-xl font-semibold"><i class="fas fa-list mr-3"></i> Listado de Seguridad</h3>
        <a onclick="abrirModal('modalCrearSeguridad')" class="btn bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">Crear Usuario</a>
    </div>
    <!-- Tabla -->
    <div class="overflow-auto mt-4">
        <table id="tablaSeguridad" class="min-w-full bg-gray-800 text-white">
            <thead class="bg-gray-900">
                <tr>
                    <th class="py-3 px-4 text-center">ID</th>
                    <th class="py-3 px-4 text-center">Usuario</th>
                    <th class="py-3 px-4 text-center">Correo</th>
                    <th class="py-3 px-4 text-center">Rol</th>
                    <th class="py-3 px-4 text-center">Estado</th>
                    <th class="py-3 px-4 text-center">Acciones</th>
                </tr>
            </thead>
            <tbody id="BodyTablaSeguridad" class="text-center">
                @if (usuarios != null)
                {
                    @foreach (var usuario in usuarios)
                    {
                        <tr class="even:bg-gray-700 hover:bg-gray-600">
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => usuario.PK_IdUsuario)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => usuario.Nombre)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => usuario.Correo)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => usuario.Rol)</td>
                            <td class="py-3 px-4 border-b border-gray-700">
                                @if (usuario.Estado)
                                {
                                    <span class="bg-green-200 text-green-600 py-1 px-3 rounded-full text-xs">Activo</span>
                                }
                                else
                                {
                                    <span class="bg-red-200 text-red-600 py-1 px-3 rounded-full text-xs">Inactivo</span>
                                }
                            </td>
                            <td>
                                <div class="flex justify-center space-x-2">
                                    <a asp-action="ActualizarSeguridad" asp-route-PK="@usuario.PK_IdUsuario" class="text-blue-600 hover:text-blue-900" title="Editar">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <form method="post" asp-action="DesactivarSeguridad" class="desactivar-form">
                                        <input type="hidden" name="PK_IdUsuario" value="@usuario.PK_IdUsuario">
                                        <button type="submit" class="text-red-600 hover:text-red-900 bg-transparent border-none p-0" title="Desactivar">
                                            <i class="fa-solid fa-ban"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="6" class="py-3 text-center">No hay datos disponibles.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
    <!-- Final de Tabla -->
    <!-- Modal de Crear Usuario -->
    <div id="modalCrearSeguridad" class="modal">
        <div class="modal-content">
            <form asp-action="CrearSeguridad" method="post" class="max-w-4xl mx-auto p-6 bg-gray-800 rounded-md" id="formcreate">
                <div class="border-b border-gray-700 pb-6">
                    <h2 class="text-lg font-semibold leading-7 text-white">Creación de nuevo Usuario</h2>
                </div>
                <div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-2 lg:grid-cols-3">
                    <div>
                        <label for="Nombre" class="block text-sm font-medium text-gray-300">Usuario</label>
                        <div class="mt-2">
                            <input asp-for="Nombre" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                        </div>
                    </div>
                    <div>
                        <label for="Correo" class="block text-sm font-medium text-gray-300">Correo</label>
                        <div class="mt-2">
                            <input asp-for="Correo" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                        </div>
                    </div>
                    <div>
                        <label for="Contra" class="block text-sm font-medium text-gray-300">Contraseña</label>
                        <div class="mt-2">
                            <input asp-for="Contra" type="password" id="Contra" name="Contra" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                        </div>
                    </div>
                    <div>
                        <label for="ConfirmarContra" class="block text-sm font-medium text-gray-300">Confirmar Contraseña</label>
                        <div class="mt-2">
                            <input id="ConfirmarContra" type="password" id="ConfirmarContra" name="ConfirmarContra"  class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                        </div>
                    </div>
                    <div>
                        <label for="Rol" class="block text-sm font-medium text-gray-300">Rol</label>
                        <div class="mt-2">
                            <select asp-for="Rol" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                                <option value="Administrador">Administrador</option>
                                <option value="Usuario">Usuario</option>
                            </select>
                        </div>
                    </div>
                    <div>
                        <label for="Estado" class="block text-sm font-medium text-gray-300">Estado</label>
                        <div class="mt-2">
                            <select asp-for="Estado" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                                <option value="true">Activo</option>
                                <option value="false">Inactivo</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="mt-6 flex justify-end gap-x-4">
                    <input asp-for="FK_Usuario_Creacion" value="1" type="hidden" />
                    <input asp-for="FK_Usuario_Modificacion" value="1" type="hidden" />
                    <button type="submit" id="btnGuardar" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Guardar</button>
                    <button asp-action="Index" class="rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-500">Cancelar</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Función para filtrar la tabla de usuarios por nombre
        function filtrarTabla() {
            // Obtener el valor de búsqueda del campo de nombre
            const nombreSeguridad = document.getElementById('usuario').value.toLowerCase();

            // Obtener todas las filas de la tabla
            const filas = document.querySelectorAll('#BodyTablaSeguridad tr');

            filas.forEach(fila => {
                const cells = fila.getElementsByTagName('td');
                const matchNombre = cells[1].textContent.toLowerCase().includes(nombreSeguridad);

                if (matchNombre) {
                    fila.style.display = '';
                } else {
                    fila.style.display = 'none';
                }
            });
        }

        // Enlazar evento de input para el campo de nombre de usuario
        document.getElementById('usuario').addEventListener('input', filtrarTabla);

        // Validación y envío del formulario de creación de usuario
        document.getElementById('btnGuardar').addEventListener('click', function (event) {
            event.preventDefault(); // Detener el envío normal del formulario

            // Validar campos requeridos
            var nombre = document.querySelector('[name="Nombre"]').value;
            var correo = document.querySelector('[name="Correo"]').value;
            var contra = document.querySelector('[name="Contra"]').value;
            var confirmarContra = document.querySelector('[name="ConfirmarContra"]').value;
            var rol = document.querySelector('[name="Rol"]').value;
            var estado = document.querySelector('[name="Estado"]').value;

            if (!nombre || !correo || !contra || !confirmarContra || !rol || !estado) {
                // Mostrar mensaje de error con SweetAlert2 si no están completos los campos
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Por favor complete todos los campos requeridos.',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            } else if (contra !== confirmarContra) {
                // Mostrar mensaje de error con SweetAlert2 si las contraseñas no coinciden
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Las contraseñas no coinciden.',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            } else {
                // Crear objeto FormData con los datos del formulario
                var formData = new FormData(document.getElementById('formcreate'));

                // Enviar los datos al controlador utilizando fetch
                fetch('/Seguridad/CrearSeguridad', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Mostrar mensaje de éxito con SweetAlert2
                            Swal.fire({
                                icon: 'success',
                                title: 'Guardado Correctamente',
                                showConfirmButton: true,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            }).then(() => {
                                window.location.href = '/Seguridad/Index'; // Redirigir a la página de índice
                            });
                        } else {
                            throw new Error('Error al guardar los datos');
                        }
                    })
                    .catch(error => {
                        // Mostrar mensaje de error con SweetAlert2 si falla la petición
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'OK'
                        });
                    });
            }
        });
        // Validación y confirmación para desactivar usuario
        document.querySelectorAll('.desactivar-form').forEach(function (form) {
            form.addEventListener('submit', function (event) {
                event.preventDefault(); // Detener el envío normal del formulario

                // Obtener el ID del usuario desde el formulario
                var pkidUsuario = this.querySelector('input[name="PK_IdUsuario"]').value;

                // Mostrar mensaje de confirmación con SweetAlert2
                Swal.fire({
                    title: '¿Está seguro?',
                    text: 'El usuario será desactivado',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, desactivar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Enviar la solicitud para desactivar al controlador de usuarios
                        fetch(`/Seguridad/DesactivarSeguridad?PK=${pkidUsuario}`, {
                            method: 'POST'
                        })
                            .then(response => {
                                if (response.ok) {
                                    // Mostrar mensaje de éxito con SweetAlert2
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Usuario desactivado correctamente',
                                        showConfirmButton: true,
                                        confirmButtonColor: '#3085d6',
                                        confirmButtonText: 'OK'
                                    }).then(() => {
                                        // Opcional: Recargar la página o actualizar la lista de usuarios
                                        location.reload();
                                    });
                                } else {
                                    throw new Error('Error al desactivar el usuario');
                                }
                            })
                            .catch(error => {
                                // Mostrar mensaje de error con SweetAlert2
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: error.message,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'OK'
                                });
                            });
                    }
                });
            });
        });


        //Funcion para paginar en index
        $(document).ready(function () {
            $('#tablaSeguridad').DataTable({
                "paging": true, // Habilita la paginación
                "pagingType": "simple_numbers", // Tipo de paginación
                "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]], // Opciones de cantidad de registros por página
                "searching": false, // Deshabilita la caja de búsqueda
                "language": {
                    "lengthMenu": " Mostrar _MENU_ registros por página",
                    "zeroRecords": "No se encontraron resultados",
                    "info": " Mostrando página _PAGE_ de _PAGES_",
                    "infoEmpty": "No hay registros disponibles",
                    "infoFiltered": "(filtrado de _MAX_ registros totales)",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                }
            });
        });
    </script>

</body>
</html>