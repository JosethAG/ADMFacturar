@using ADM.Models
@model CXP

@{
    var cxps = ViewData["CXP"] as List<CXP>;
    var proveedores = ViewData["Proveedores"] as List<Proveedor>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ingreso de Proveedores</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="~/css/custom.css" rel="stylesheet" />
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- Tabla Paginar  -->
    <link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
</head>
<body>


    <div class="w-full">
    </div>
    <!--                  Inicio Form                        -->
    <form id="filterForm">
        <div class="bg-gray-800 text-white p-5 rounded-lg shadow-lg">
            <h2 class="text-lg font-bold mb-4">Filtros de Cuentas Por Pagar</h2>
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-6">
                <!-- Fecha Inicio -->
                <div class="sm:col-span-1">
                    <label for="entry_date" class="block text-sm font-medium leading-6 text-white">Fecha Inicio</label>
                    <div class="mt-2">
                        <input type="date" id="entry_date" name="entry_date" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                    </div>
                </div>
                <!-- Fecha Final -->
                <div class="sm:col-span-1">
                    <label for="expiry_date" class="block text-sm font-medium leading-6 text-white">Fecha Final</label>
                    <div class="mt-2">
                        <input type="date" id="expiry_date" name="expiry_date" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                    </div>
                </div>

                <!-- Proveedor -->
                <div class="sm:col-span-1">
                    <label for="PK_FK_Proveedor" class="block text-sm font-medium text-white">Proveedor</label>
                    <div class="mt-2">
                        <select asp-for="FK_Proveedor" id="PK_FK_Proveedor" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px; height: 38px;">
                            <option value="">Seleccione un proveedor</option>
                            @if (proveedores != null)
                            {
                                @foreach (var proveedor in proveedores)
                                {
                                    <option value="@proveedor.PK_Proveedor">@proveedor.Nombre</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <!-- Número de Documento -->
                <div class="sm:col-span-1">
                    <label for="document_number" class="block text-sm font-medium leading-6 text-white">Número de Documento</label>
                    <div class="mt-2">
                        <input type="text" id="document_number" name="document_number" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                    </div>
                </div>
            </div>
        </div>
    </form>

    <br>
    <br>

    <!--                  Final Form                        -->
    <!--                  Inicio de Tabla                        -->

    <div class="w-full mt-8 bg-gray-800 p-6 rounded-lg shadow-lg">
        <div class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-t-lg">
            <h3 class="text-xl font-semibold"><i class="fas fa-list mr-3"></i> Reporte de Cuentas por Pagar</h3>
            <div>
                <button id="exportButton" class="bg-green-500 text-white px-4 py-2 mr-4 rounded hover:bg-green-600">Exportar a Excel</button>
            </div>
        </div>

        <div class="overflow-auto mt-4">
            <table id="tablaCXP" class="min-w-full bg-gray-800 text-white">
                <thead class="bg-gray-900">
                    <tr>
                        <th class="py-3 px-4 text-center">Documento</th>
                        <th class="py-3 px-4 text-center">Proveedor</th>
                        <th class="py-3 px-4 text-center">Fecha Emisión</th>
                        <th class="py-3 px-4 text-center">Observaciones Fecha a Vencer</th>
                        <th class="py-3 px-4 text-center">Total</th>
                        <th class="py-3 px-4 text-center">Saldo</th>
                    </tr>
                </thead>
                <tbody id="bodyTablaCXP" class="text-center">
                    @if (cxps != null)
                    {
                        @foreach (var cxp in cxps)
                        {
                            <tr class="even:bg-gray-700 hover:bg-gray-600">
                                <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => cxp.PK_Documento)</td>
                                <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => cxp.NombreProveedor)</td>
                                <td class="py-3 px-4 border-b border-gray-700">@Html.Raw(cxp.Fecha_Documento.ToString("yyyy-MM-dd"))</td>
                                <td class="py-3 px-4 border-b border-gray-700 fecha-vencimiento">@Html.Raw(cxp.Fecha_Vence.ToString("yyyy-MM-dd"))</td>
                                <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => cxp.Monto)</td>
                                <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => cxp.Saldo_Pendiente)</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="14">No hay datos disponibles.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <!--                  Final de Tabla                        -->
    <!--Reducción de codigo realizando vista parcial
        Ajuste 22/7/24 por Joseth Araya -->
    <div id="modalCrearAbono" class="modal">
        <div class="modal-content">
            <div id="AbonoContainer">
                <div id="CrearAbono"></div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
    <script>

        //Funcion para exportar a excel:
        document.getElementById('exportButton').addEventListener('click', function () {
            // Obtén la tabla completa
            var table = document.getElementById('tablaCXP');

            // Convierte la tabla a una hoja de cálculo
            var wb = XLSX.utils.table_to_book(table);

            // Crea un archivo Excel y descarga
            XLSX.writeFile(wb, 'reporteCXP.xlsx');
        });


        function filtrarTabla() {
            const fechaInicio = document.getElementById('entry_date').value;
            const fechaFinal = document.getElementById('expiry_date').value;
            const proveedor = document.getElementById('PK_FK_Proveedor').value;
            const numeroDocumento = document.getElementById('document_number').value.toLowerCase();

            const filas = document.querySelectorAll('#bodyTablaCXP tr');

            filas.forEach(fila => {
                const cells = fila.getElementsByTagName('td');

                const fechaDocumento = cells[2].textContent.trim();
                const fechaVence = cells[3].textContent.trim();
                const proveedorNombre = cells[1].textContent.trim();
                const documento = cells[0].textContent.toLowerCase();

                // Filtramos basado en los valores del formulario
                const matchFechaInicio = fechaInicio === '' || new Date(fechaDocumento) >= new Date(fechaInicio);
                const matchFechaFinal = fechaFinal === '' || new Date(fechaVence) <= new Date(fechaFinal);
                const matchProveedor = proveedor === '' || proveedorNombre === proveedor;
                const matchNumeroDocumento = numeroDocumento === '' || documento.includes(numeroDocumento);

                if (matchFechaInicio && matchFechaFinal && matchProveedor && matchNumeroDocumento) {
                    fila.style.display = '';
                } else {
                    fila.style.display = 'none';
                }
            });
        }

        // Agregar eventos al formulario para filtrar en tiempo real
        document.getElementById('filterForm').addEventListener('input', filtrarTabla);


        function actualizarComboBoxProveedores() {
            const proveedoresComboBox = document.getElementById('PK_FK_Proveedor');
            const filas = document.querySelectorAll('#bodyTablaCXP tr');

            // Crear un conjunto para evitar duplicados
            const proveedores = new Set();

            filas.forEach(fila => {
                const cells = fila.getElementsByTagName('td');
                const proveedorNombre = cells[1].textContent.trim();
                if (proveedorNombre) {
                    proveedores.add(proveedorNombre);
                }
            });

            // Limpiar opciones existentes
            proveedoresComboBox.innerHTML = '<option value="">Seleccione un proveedor</option>';

            // Agregar opciones nuevas
            proveedores.forEach(proveedor => {
                const option = document.createElement('option');
                option.value = proveedor; // Si el valor del combo box es diferente al nombre, ajusta aquí
                option.textContent = proveedor;
                proveedoresComboBox.appendChild(option);
            });
        }

        // Llamar a la función para actualizar el combo box al cargar la página
        document.addEventListener('DOMContentLoaded', actualizarComboBoxProveedores);


        /*Metodo para cargar la vista parcial
                Ajuste 22 / 7 / 24 por Joseth Araya*/
        function cargarAbono(pk) {
            $.ajax({
                url: '@Url.Action("Abono", "CXP")',
                type: 'GET',
                data: { PK: pk },
                success: function (data) {
                    $('#CrearAbono').html(data);
                },
                error: function (xhr, status, error) {
                    console.error('Error al cargar la vista parcial Abono:', error);
                }
            });
            abrirModal('modalCrearAbono');
        }


        // //Funcion para paginar en index
        //      $(document).ready(function () {
        //          $('#tablaCXP').DataTable({
        //              "paging": true,
        //              "pagingType": "simple_numbers",
        //              "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
        //              "searching": false,
        //              "language": {
        //                  "lengthMenu": " Mostrar _MENU_ registros por página",
        //                  "zeroRecords": "No se encontraron resultados",
        //                  "info": " Mostrando página _PAGE_ de _PAGES_",
        //                  "infoEmpty": "No hay registros disponibles",
        //                  "infoFiltered": "(filtrado de _MAX_ registros totales)",
        //                  "paginate": {
        //                      "first": "Primero",
        //                      "last": "Último",
        //                      "next": "Siguiente",
        //                      "previous": "Anterior"
        //                  }
        //              }
        //          });
        //      });


        document.addEventListener("DOMContentLoaded", function () {
            const fechaActual = new Date();
            const celdasFechaVence = document.querySelectorAll('.fecha-vencimiento');

            celdasFechaVence.forEach(celda => {
                const fechaVence = new Date(celda.textContent.trim());
                const diffTime = fechaVence - fechaActual;
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

                if (diffDays < 0) {
                    celda.style.color = 'red';
                } else if (diffDays < 7) {
                    celda.style.color = 'yellow';
                } else if (diffDays > 15) {
                    celda.style.color = 'green';
                }
            });
        });
    </script>
</body>
</html>