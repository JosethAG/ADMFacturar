@model dynamic

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ingreso de Articulos</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="~/css/custom.css" rel="stylesheet" />
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- Tabla Paginar  -->
    <link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
</head>
<body>

    <div class="w-full">
    </div>
    <!--                  Inicio Form                        -->
    <form id="filterForm">
        <div class="bg-gray-800 text-white p-5 rounded-lg shadow-lg">
            <h2 class="text-lg font-bold mb-4">Filtros de Busqueda</h2>
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-6">
                <!-- Fecha Inicio -->
                <div class="sm:col-span-1">
                    <label for="entry_date" class="block text-sm font-medium leading-6 text-white">Fecha Inicio</label>
                    <div class="mt-2">
                        <input type="date" id="entry_date" name="entry_date" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6">
                    </div>
                </div>
                <!-- Fecha Final -->
                <div class="sm:col-span-1">
                    <label for="expiry_date" class="block text-sm font-medium leading-6 text-white">Fecha Final</label>
                    <div class="mt-2">
                        <input type="date" id="expiry_date" name="expiry_date" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6">
                    </div>
                </div>

                <!-- Nombre de Cliente -->
                <div class="sm:col-span-1">
                    <label for="name" class="block text-sm font-medium leading-6 text-white">Cliente</label>
                    <div class="mt-2">
                        <input type="text" id="name" name="name" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6">
                    </div>
                </div>
            </div>

            <div class="sm:col-span-1">
                <fieldset>
                    <legend class="block text-sm font-medium leading-6 text-white">Estado</legend>
                    <div class="mt-3 flex items-center gap-x-10">
                        <div class="flex items-center gap-x-2 bg-yellow-100 text-yellow-800 text-md font-medium px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-blue-400 border border-yellow-400">
                            <input id="estadoPendientes" name="estado" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600">
                            <label for="estadoPendientes" class="block text-sm font-medium leading-6 text-gray-900">Pendientes</label>
                        </div>
                        <div class="flex items-center gap-x-2 bg-green-100 text-green-800 text-md font-medium px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-blue-400 border border-green-400">
                            <input id="estadoCompletados" name="estado" type="radio" class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600">
                            <label for="estadoCompletados" class="block text-sm font-medium leading-6 text-gray-900">Completados</label>
                        </div>
                    </div>
                </fieldset>
            </div>
        </div>
    </form>
    <!--Final de From-->
    <div class="w-full mt-8 bg-gray-800 p-6 rounded-lg shadow-lg">
        <div class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-t-lg">
            <h3 class="text-xl font-semibold"><i class="fas fa-list mr-3"></i> Listado Estados de Cuenta</h3>
            <div>
                <button id="exportButton" class="bg-green-500 text-white px-4 py-2 mr-4 rounded hover:bg-green-600">Exportar a Excel</button>
            </div>

        </div>

        <!--                  Tabla                        -->
        <div class="overflow-auto mt-4">
            <table id="tablaReportesEstadoCuentas" class="min-w-full bg-gray-800 text-white">
                <thead class="bg-gray-900">
                    <tr>
                        <th class="py-3 px-4 text-center">PK_Factura</th>
                        <th class="py-3 px-4 text-center">Nombre Cliente</th>
                        <th class="py-3 px-4 text-center">Fecha</th>
                        <th class="py-3 px-4 text-center">Fecha Vencimiento</th>
                        <th class="py-3 px-4 text-center">Estado</th>
                        <th class="py-3 px-4 text-center">Total</th>
                        <th class="py-3 px-4 text-center">Saldo Pendiente</th>
                    </tr>
                </thead>
                <tbody id="bodyTablaReportesEstadoCuentas" class="text-center">
                    @if (ViewData["Facturas"] != null)
                    {
                        var facturas = (IEnumerable<FacturaModel>)ViewData["Facturas"];
                        foreach (var factura in facturas)
                        {
                            <tr class="even:bg-gray-700 hover:bg-gray-600">
                                <td class="py-3 px-4 border-b border-gray-700">@factura.PK_Factura</td>
                                <td class="py-3 px-4 border-b border-gray-700">@factura.Nombre_Cliente</td>
                                <td class="py-3 px-4 border-b border-gray-700">@factura.Fecha.ToString("d")</td>
                                <td class="py-3 px-4 border-b border-gray-700">@factura.Fecha_Vencimiento.ToString("d")</td>
                                <td class="py-3 px-4 border-b border-gray-700">@factura.Estado</td>
                                <td class="py-3 px-4 border-b border-gray-700">@factura.Total.ToString("C")</td>
                                <td class="py-3 px-4 border-b border-gray-700">@factura.Saldo_Pendiente.ToString("C")</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="14">No hay datos disponibles.</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr class="bg-gray-800 text-white">
                        <td colspan="6" class="py-3 text-right font-bold">Total Pendiente:</td>
                        <td id="totalSaldoPendiente" class="py-3 text-center font-bold"></td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.0/xlsx.full.min.js"></script>
    <script>
        // Función para filtrar la tabla según el formulario
        function filtrarTabla() {
            // Obtener los valores del formulario
            var fechaInicio = document.getElementById('entry_date').value;
            var fechaFinal = document.getElementById('expiry_date').value;
            var nombreCliente = document.getElementById('name').value.toLowerCase();
            var estado = document.querySelector('input[name="estado"]:checked');
            estado = estado ? estado.nextElementSibling.textContent.trim() : '';

            // Obtener todas las filas de la tabla
            var filas = document.querySelectorAll('#bodyTablaReportesEstadoCuentas tr');

            filas.forEach(fila => {
                var celdas = fila.querySelectorAll('td');
                var fecha = celdas[2].textContent.trim(); // Fecha en la tercera columna
                var cliente = celdas[1].textContent.trim().toLowerCase(); // Nombre Cliente en la segunda columna
                var estadoFila = celdas[4].textContent.trim(); // Estado en la quinta columna
                var saldoPendiente = parseFloat(celdas[6].textContent.replace('$', '').replace(',', '')); // Saldo Pendiente en la séptima columna

                // Convertir las fechas a objetos Date para comparación
                var fechaFactura = new Date(fecha);
                var fechaInicioObj = fechaInicio ? new Date(fechaInicio) : null;
                var fechaFinalObj = fechaFinal ? new Date(fechaFinal) : null;

                var mostrarFila = true;

                // Filtrar por fecha
                if (fechaInicioObj && fechaFactura < fechaInicioObj) {
                    mostrarFila = false;
                }
                if (fechaFinalObj && fechaFactura > fechaFinalObj) {
                    mostrarFila = false;
                }

                // Filtrar por nombre del cliente
                if (nombreCliente && !cliente.includes(nombreCliente)) {
                    mostrarFila = false;
                }

                // Filtrar por estado
                if (estado && estado !== estadoFila) {
                    mostrarFila = false;
                }

                // Mostrar u ocultar la fila según el filtro
                fila.style.display = mostrarFila ? '' : 'none';
            });

            // Calcular el total pendiente después de aplicar los filtros
            calcularTotalSaldoPendiente();
        }

        // Función para calcular el total del saldo pendiente
        function calcularTotalSaldoPendiente() {
            var totalSaldoPendiente = 0;

            // Obtener todas las filas visibles de la tabla
            var filas = document.querySelectorAll('#bodyTablaReportesEstadoCuentas tr');
            filas.forEach(fila => {
                if (fila.style.display !== 'none') { // Solo considerar filas visibles
                    var celdas = fila.querySelectorAll('td');
                    var saldoPendiente = parseFloat(celdas[6].textContent.replace('$', '').replace(',', ''));

                    if (!isNaN(saldoPendiente)) {
                        totalSaldoPendiente += saldoPendiente;
                    }
                }
            });

            // Mostrar el total en el elemento específico
            document.getElementById('totalSaldoPendiente').textContent = totalSaldoPendiente.toFixed(2);
        }

        // Función para exportar la tabla a Excel
        function exportarTablaAExcel() {
            // Obtén la tabla completa
            var table = document.getElementById('tablaReportesEstadoCuentas');

            // Convierte la tabla a una hoja de cálculo
            var wb = XLSX.utils.table_to_book(table);

            // Crea un archivo Excel y descarga
            XLSX.writeFile(wb, 'reporteFacturas.xlsx');
        }

        // Llamar a la función de filtro cuando el formulario cambie
        document.getElementById('filterForm').addEventListener('change', filtrarTabla);

        // Llamar a la función de filtro al cargar la página para asegurar que la tabla esté actualizada
        document.addEventListener('DOMContentLoaded', filtrarTabla);

        // Asignar la función de exportar al botón de exportar
        document.getElementById('exportButton').addEventListener('click', exportarTablaAExcel);
    </script>
</body>
</html>
