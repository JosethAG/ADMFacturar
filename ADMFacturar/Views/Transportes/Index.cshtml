@using ADM.Models
@model Transporte

@{
    var transportes = ViewData["Transportes"] as List<Transporte>;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ingreso de Transportes</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="~/css/custom.css" rel="stylesheet" />
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <!-- Tabla Paginar  -->
    <link href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
</head>
<body>

<div class="w-full">
</div>

<!--                  Formulario                        -->
<form>
    <div class="bg-gray-800 text-white p-5 rounded-lg shadow-lg">
        <h2 class="text-lg font-bold mb-4">Filtro de Transportes</h2>
        <div class="grid grid-cols-1 gap-4 sm:grid-cols-6">
            <div class="sm:col-span-1">
                <label for="nombre_transporte" class="block text-sm font-medium leading-6 text-white">Nombre de Transporte</label>
                <div class="mt-1">
                    <input type="text" id="nombre_transporte" name="nombre_transporte" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6">
                </div>
            </div>
        </div>
    </div>
</form>
<!-- Final de Formulario -->


<div class="w-full mt-8 bg-gray-800 p-6 rounded-lg shadow-lg">
    <div class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-t-lg">
        <h3 class="text-xl font-semibold"><i class="fas fa-list mr-3"></i> Listado de Transportes</h3>
        <a onclick="abrirModal('modalCrearTransporte')" class="btn bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">Crear Transporte</a>
    </div>
    <!-- Tabla -->
    <div class="overflow-auto mt-4">
        <table id="tablaTransportes" class="min-w-full bg-gray-800 text-white">
            <thead class="bg-gray-900">
                <tr>
                    <th class="py-3 px-4 text-center">Código Transporte</th>
                    <th class="py-3 px-4 text-center">Descripción Transporte</th>
                    <th class="py-3 px-4 text-center">Estado Transporte</th>
                    <th class="py-3 px-4 text-center">Acciones</th>
                </tr>
            </thead>
            <tbody id="bodyTablaTransportes" class="text-center">
                @if (transportes != null)
                {
                    @foreach (var transporte in transportes)
                    {
                        <tr class="even:bg-gray-700 hover:bg-gray-600">
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => transporte.PK_Medio_Transporte)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => transporte.Descripcion)</td>
                            <td class="py-3 px-4 border-b border-gray-700">
                                @if (transporte.Estado)
                                {
                                    <span class="bg-green-200 text-green-600 py-1 px-3 rounded-full text-xs">Activo</span>
                                }
                                else
                                {
                                    <span class="bg-red-200 text-red-600 py-1 px-3 rounded-full text-xs">Inactivo</span>
                                }
                            </td>
                            <td>
                                <div class="flex justify-center space-x-2">
                                        <a onclick="ActuVarTransporte('@transporte.PK_Medio_Transporte')" class="bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600" title="Editar">
                                            <i class="fa-solid fa-edit"></i>
                                    </a>
                                    <form method="post" asp-action="DesactivarTransporte" class="desactivar-form">
                                        <input type="hidden" name="PK_Medio_Transporte" value="@transporte.PK_Medio_Transporte">
                                            <button type="submit" class="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600" title="Desactivar">
                                                <i class="fa-solid fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="py-3 text-center">No hay datos disponibles.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<!--                  Modal de Crear Template                        -->
    <div id="modalCrearTransporte" class="modal">
        <div class="modal-content">
            <form asp-action="CrearTransporte" method="post" class="max-w-4xl mx-auto p-6 bg-gray-800 rounded-md" id="formcreate">
                <div class="border-b border-gray-700 pb-6">
                    <h2 class="text-lg font-semibold leading-7 text-white">Creación de nuevo Transporte</h2>
                </div>
                <div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-2 lg:grid-cols-3">
                    <div>
                        <label for="Descripcion" class="block text-sm font-medium text-gray-300">Descripción Transporte</label>
                        <div class="mt-2">
                            <input asp-for="Descripcion" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500" required>
                        </div>
                    </div>
                    <div>
                        <label for="Estado" class="block text-sm font-medium text-gray-300">Estado</label>
                        <div class="mt-2">
                            <select asp-for="Estado" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500" required>
                                <option value="true">Activo</option>
                                <option value="false">Inactivo</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="mt-6 flex justify-end gap-x-4">
                    <input asp-for="FK_Usuario_Creacion" value="1" type="hidden" />
                    <input asp-for="FK_Usuario_Modificacion" value="1" type="hidden" />
                    <button type="submit" id="btnGuardar" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Guardar</button>
                    <button asp-action="Index" class="rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-500">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
<!--                  Final Modal de Crear Tempalte                        -->

<!--                  Modal de Actualizar Template                        -->
    <div id="modalActuTransporte" class="modal">
        <div class="modal-content">
            <form asp-action="ActualizarTransporte" method="post" class="max-w-4xl mx-auto p-6 bg-gray-800 rounded-md" id="formupdate">
                <div class="border-b border-gray-700 pb-6">
                    <h2 class="text-lg font-semibold leading-7 text-white">Actualizar Transporte</h2>
                </div>
                <div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
                    <div class="sm:col-span-2">
                        <label for="Descripcion" class="block text-sm font-medium text-gray-300">Descripción Transporte</label>
                        <div class="mt-2">
                            <input asp-for="Descripcion" type="text" id="descripcion" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                        </div>
                    </div>
                    <div class="sm:col-span-2">
                        <label for="Estado" class="block text-sm font-medium text-gray-300">Estado</label>
                        <div class="mt-2">
                            <select asp-for="Estado" id="state" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                                <option value="true">Activo</option>
                                <option value="false">Inactivo</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="mt-6 flex justify-end gap-x-4">
                    <input asp-for="PK_Medio_Transporte" id="pkTransporte" type="hidden" />
                    <input asp-for="FK_Usuario_Creacion" value="1" type="hidden" />
                    <input asp-for="FK_Usuario_Modificacion" value="1" type="hidden" />
                    <button type="submit" id="btnActualizar" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Guardar</button>
                    <button asp-action="Index" class="rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-500">Cancelar</button>
                </div>
            </form>
        </div>
    </div>
<!--                  Final Modal de Actualizar Tempalte                        -->

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

    // Función para filtrar la tabla de transportes por nombre
    function filtrarTabla() {
        // Obtener el valor de búsqueda del campo de nombre
        const nombreTransporte = document.getElementById('nombre_transporte').value.toLowerCase();

        // Obtener todas las filas de la tabla
        const filas = document.querySelectorAll('#bodyTablaTransportes tr');

        filas.forEach(fila => {
            const cells = fila.getElementsByTagName('td');
            const matchNombre = cells[1].textContent.toLowerCase().includes(nombreTransporte);

            if (matchNombre) {
                fila.style.display = '';
            } else {
                fila.style.display = 'none';
            }
        });
    }

    // Enlazar evento de input para el campo de nombre de transporte
    document.getElementById('nombre_transporte').addEventListener('input', filtrarTabla);


    document.getElementById('btnGuardar').addEventListener('click', function (event) {
            event.preventDefault(); // Detener el envío normal del formulario

            // Validar campos requeridos
            var descripcion = document.querySelector('[name="Descripcion"]').value;
            var estado = document.querySelector('[name="Estado"]').value;

            if (!descripcion || !estado) {
                // Mostrar mensaje de error con SweetAlert2 si no están completos los campos
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Por favor complete todos los campos requeridos.',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            } else {
                // Crear objeto FormData con los datos del formulario
                var formData = new FormData(document.getElementById('formcreate'));

                // Enviar los datos al controlador utilizando fetch
                fetch('/Transportes/CrearTransporte', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Mostrar mensaje de éxito con SweetAlert2
                            Swal.fire({
                                icon: 'success',
                                title: 'Guardado Correctamente',
                                showConfirmButton: true,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                // Redirigir a la página de índice de transportes después de guardar
                                window.location.href = '/Transportes/Index';
                            });
                        } else {
                            throw new Error('Error al guardar los datos');
                        }
                    })
                    .catch(error => {
                        // Mostrar mensaje de error con SweetAlert2
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'OK'
                        });
                    });
            }
        });


        /*Cargar Datos Modal
         Incorporado el 20/7/24 por Joseth Araya
        */

        function ActuVarTransporte(PK) {
            console.log("Respuesta   " + PK);
            fetch(`/Transportes/ObtenerTransporte?PK=${PK}`, {
                method: 'GET'
            })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        throw new Error('Error al obtener el proveedor');
                    }
                })
                .then(data => {
                    // Asignación de datos al modal
                    document.getElementById('pkTransporte').value = data.pK_Medio_Transporte;
                    document.getElementById('descripcion').value = data.descripcion;
                    document.getElementById('state').value = data.estado.toString().toLowerCase();

                    // Abrir el modal de actualización
                    abrirModal('modalActuTransporte');
                })
                .catch(error => {
                    // Mostrar mensaje de error con SweetAlert2 u otra forma
                    console.error('Error:', error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: 'Error al obtener los datos del proveedor',
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'OK'
                    });
                });
        }


        /*Actualizar Transporte
         Incorporado el 20/7/24 por Joseth Araya
        */
        document.getElementById('btnActualizar').addEventListener('click', function (event) {
            event.preventDefault(); // Detener el envío normal del formulario

            // Validar campos requeridos
            var descripcion = document.getElementById('descripcion').value;
            var estado = document.getElementById('state').value;

            if (!descripcion || !estado) {
                // Mostrar mensaje de error con SweetAlert2 si no están completos los campos
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Por favor complete todos los campos requeridos.',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            } else {
                // Crear objeto FormData con los datos del formulario
                var formData = new FormData(document.getElementById('formupdate'));

                // Enviar los datos al controlador utilizando fetch
                fetch('/Transportes/ActualizarTransporte', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Mostrar mensaje de éxito con SweetAlert2
                            Swal.fire({
                                icon: 'success',
                                title: 'Actualizado Correctamente',
                                showConfirmButton: true,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                // Redirigir a la página de índice de transportes después de guardar
                                window.location.href = '/Transportes/Index';
                            });
                        } else {
                            throw new Error('Error al guardar los datos');
                        }
                    })
                    .catch(error => {
                        // Mostrar mensaje de error con SweetAlert2
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'OK'
                        });
                    });
            }
        });

        // <!-- Inicio Validación botón desactivar -->
    document.querySelectorAll('.desactivar-form').forEach(function (form) {
        form.addEventListener('submit', function (event) {
            event.preventDefault(); // Detener el envío normal del formulario

            // Obtener la PK del transporte desde el formulario
            var pkTransporte = this.querySelector('input[name="PK_Medio_Transporte"]').value;

            // Mostrar mensaje de confirmación con SweetAlert2
            Swal.fire({
                title: '¿Está seguro?',
                text: "¿Desea desactivar este transporte?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Sí, desactivar',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    // Enviar la solicitud para desactivar el transporte
                    fetch(`/Transportes/DesactivarTransporte?PK=${pkTransporte}`, {
                        method: 'POST'
                    })
                        .then(response => {
                            if (response.ok) {
                                // Mostrar mensaje de éxito con SweetAlert2
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Transporte desactivado correctamente',
                                    showConfirmButton: true,
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'OK'
                                }).then((result) => {
                                    // Recargar la página después de desactivar
                                    location.reload();
                                });
                            } else {
                                throw new Error('Error al desactivar el transporte');
                            }
                        })
                        .catch(error => {
                            // Mostrar mensaje de error con SweetAlert2
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: error.message,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'OK'
                            });
                        });
                }
            });
        });
    });
    // <!-- Fin Validación botón desactivar -->


        // Función para inicializar la paginación y estilos de DataTables en la tabla de transportes
      $(document).ready(function () {
			$('#tablaTransportes').DataTable({
				"paging": true, // Habilita la paginación
				"pagingType": "simple_numbers", // Tipo de paginación
				"lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]], // Opciones de cantidad de registros por página
				"searching": false, // Deshabilita la caja de búsqueda
				"language": {
					"lengthMenu": " Mostrar _MENU_ registros por página",
					"zeroRecords": "No se encontraron resultados",
					"info": " Mostrando página _PAGE_ de _PAGES_",
					"infoEmpty": "No hay registros disponibles",
					"infoFiltered": "(filtrado de _MAX_ registros totales)",
					"paginate": {
						"first": "Primero",
						"last": "Último",
						"next": "Siguiente",
						"previous": "Anterior"
					}
				}
			});
		});
</script>
    <style>
        #tablaTransportes tbody td {
            border-bottom: none;
        }
        /* Cambia el color del texto de la paginación a blanco */
        .dataTables_wrapper .dataTables_paginate .paginate_button,
        .dataTables_wrapper .dataTables_info,
        .dataTables_wrapper .dataTables_length select {
            color: white !important;
        }

            /* Cambia el color al pasar el ratón por encima */
            .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
                color: #ddd !important;
            }

            /* Cambia el color de fondo y el color del texto para el botón de la página actual */
            .dataTables_wrapper .dataTables_paginate .paginate_button.current {
                background-color: #333 !important;
                color: white !important;
            }
    </style>
</body>
</html>