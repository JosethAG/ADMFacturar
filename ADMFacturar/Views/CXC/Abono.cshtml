@using ADM.Models
@model AbonoCXC

@{
    var abonos = ViewData["AbonosCXC"] as List<AbonoCXC>;
    var cxc = ViewData["CXC"] as CXC;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ingreso de Abonos</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet">
    <link href="~/css/custom.css" rel="stylesheet" />
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>

    <form asp-action="CrearAbono" method="post" class="max-w-4xl mx-auto p-6 bg-gray-800 rounded-md" id="formcreate">
        <div class="border-b border-gray-700 pb-6">
            <h2 class="text-lg font-semibold leading-7 text-white">Creación de nuevo Abono</h2>
        </div>
        <div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-2 lg:grid-cols-3">
            <div>
                <label for="Numero_Abono" class="block text-sm font-medium text-gray-300">Número Abono</label>
                <div class="mt-2">
                    <input asp-for="Numero_Abono" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>
            <div>
                <label for="FK_Documento" class="block text-sm font-medium text-gray-300">Documento</label>
                <div class="mt-2">
                    <input asp-for="FK_Documento_CC" value="@cxc.PK_Documento_CC" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500" readonly>
                </div>
            </div>
            <div>
                <label for="Fecha_Abono" class="block text-sm font-medium text-gray-300">Fecha de Abono</label>
                <div class="mt-2">
                    <input asp-for="Fecha_Abono" type="date" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>
            <div style="display: none;">
                <label for="FK_Cliente" class="block text-sm font-medium text-gray-300">Cliente</label>
                <div class="mt-2">
                    <input asp-for="FK_Cliente" value="@cxc.FK_Cliente" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500" readonly>
                </div>
            </div>
            <div>
                <label for="Monto_Abonado" class="block text-sm font-medium text-gray-300">Monto Abonado</label>
                <div class="mt-2">
                    <input asp-for="Monto_Abonado" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>
            <div>
                <label for="Tipo_Pago" class="block text-sm font-medium text-gray-300">Tipo Pago</label>
                <div class="mt-2">
                    <select asp-for="Tipo_Pago" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                        <option value="Factura">Factura</option>
                        <option value="Sinpe">Sinpe</option>
                        <option value="Transferencia">Transferencia</option>
                        <option value="Cheque">Cheque</option>
                    </select>
                </div>
            </div>
            <div>
                <label for="Banco" class="block text-sm font-medium text-gray-300">Banco</label>
                <div class="mt-2">
                    <input asp-for="Banco" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
                </div>
            </div>
        </div>
        <div class="mt-6 flex justify-end gap-x-4">
            <input asp-for="FK_Usuario_Creacion" value="1" type="hidden" />
            <input asp-for="FK_Usuario_Modificacion" value="1" type="hidden" />
            <button type="submit" id="btnGuardar" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Guardar</button>
            <button asp-action="Index" class="rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-500">Cancelar</button>
        </div>
    </form>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        document.getElementById('btnGuardar').addEventListener('click', function (event) {
            event.preventDefault(); // Detener el envío normal del formulario

            // Validar campos requeridos
            var fk_Documento = document.querySelector('[name="FK_Documento_CC"]').value;
            var fk_Cliente = document.querySelector('[name="FK_Cliente"]').value;
            var montoAbonado = document.querySelector('[name="Monto_Abonado"]').value;
            var tipoPago = document.querySelector('[name="Tipo_Pago"]').value;
            var banco = document.querySelector('[name="Banco"]').value;
            var fechaAbono = document.querySelector('[name="Fecha_Abono"]').value;

            if (!fk_Documento || !fk_Cliente || !montoAbonado || !tipoPago || !banco || !fechaAbono) {
                // Mostrar mensaje de error con SweetAlert2 si no están completos los campos
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Por favor complete todos los campos requeridos.',
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'OK'
                });
            } else {
                // Crear objeto FormData con los datos del formulario
                var formData = new FormData(document.getElementById('formcreate'));

                // Enviar los datos al controlador utilizando fetch
                fetch('/CXC/CrearAbono', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => {
                        if (response.ok) {
                            // Mostrar mensaje de éxito con SweetAlert2
                            Swal.fire({
                                icon: 'success',
                                title: 'Guardado Correctamente',
                                showConfirmButton: true,
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                // Redirigir a la página de índice de proveedores después de guardar
                                window.location.href = '/CXC/Index';
                            });
                        } else {
                            // Si la respuesta no es exitosa, mostrar mensaje de error
                            throw new Error('Error al guardar los datos');
                        }
                    })
                    .catch(error => {
                        // Mostrar mensaje de error con SweetAlert2 si hay un error en la solicitud
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: error.message,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'OK'
                        });
                    });
            }
        });
    </script>
</body>
</html>