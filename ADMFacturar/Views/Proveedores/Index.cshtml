@model Proveedor
@{
	var proveedores = ViewData["Proveedores"] as List<Proveedor>;
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Ingreso de Proveedores</title>
</head>
<body>

	<div class="w-full">
	</div>

	<!-- Formulario -->
	<form>
		<div class="bg-gray-800 text-white p-5 rounded-lg shadow-lg">
			<h2 class="text-lg font-bold mb-4">Filtro de Proveedores</h2>
			<div class="grid grid-cols-1 gap-4 sm:grid-cols-6">
				<div class="sm:col-span-1">
					<label for="nombre_vendedor" class="block text-sm font-medium leading-6 text-white">Nombre de Proveedor</label>
					<div class="mt-1">
						<input type="text" id="nombre_vendedor" name="nombre_vendedor" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6">
					</div>
				</div>
			</div>
		</div>
	</form>
	<!-- Final de Formulario -->

	<!-- Listado de proveedores -->
	<div class="w-full mt-8 bg-gray-800 p-6 rounded-lg shadow-lg">
    <div class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-t-lg">
        <h3 class="text-xl font-semibold"><i class="fas fa-list mr-3"></i> Listado de Proveedores</h3>
        <a onclick="abrirModal('modalCrearProveedor')" class="btn bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">Crear Proveedor</a>
    </div>
    <!-- Tabla -->
    <div class="overflow-auto mt-4">
        <table id="tablaProveedores" class="min-w-full bg-gray-800 text-white">
            <thead class="bg-gray-900">
                <tr>
                    <th class="py-3 px-4 text-center">Código Proveedor</th>
                    <th class="py-3 px-4 text-center">Nombre Proveedor</th>
                    <th class="py-3 px-4 text-center">Teléfono Proveedor</th>
                    <th class="py-3 px-4 text-center">Correo Proveedor</th>
                    <th class="py-3 px-4 text-center">Dirección Proveedor</th>
                    <th class="py-3 px-4 text-center">Estado Proveedor</th>
                    <th class="py-3 px-4 text-center">Acciones</th>
                </tr>
            </thead>
            <tbody id="bodyTablaProveedores" class="text-center">
                @if (proveedores != null)
                {
                    @foreach (var proveedor in proveedores)
                    {
                        <tr class="even:bg-gray-700 hover:bg-gray-600">
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => proveedor.PK_Proveedor)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => proveedor.Nombre)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => proveedor.Telefono)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => proveedor.Correo)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => proveedor.Direccion)</td>
                            <td class="py-3 px-4 border-b border-gray-700">
                                @if (proveedor.Estado)
                                {
                                    <span class="bg-green-200 text-green-600 py-1 px-3 rounded-full text-xs">Activo</span>
                                }
                                else
                                {
                                    <span class="bg-red-200 text-red-600 py-1 px-3 rounded-full text-xs">Inactivo</span>
                                }
                            </td>
                            <td>
                                <div class="flex justify-center space-x-2">
										<a onclick="ActuVarProveedor('@proveedor.PK_Proveedor')" class="bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600" title="Editar">
											<i class="fa-solid fa-edit"></i>
                                    </a>
                                    <form method="post" asp-action="DesactivarProveedor" class="desactivar-form">
                                        <input type="hidden" name="PK_Proveedor" value="@proveedor.PK_Proveedor">
											<button type="submit" class="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600" title="Desactivar">
												<i class="fa-solid fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="7">No hay datos disponibles.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

	
	<!--                  Modal de Crear Template                        -->
	<div id="modalCrearProveedor" class="modal">
		<div class="modal-content">
			<form asp-action="CrearProveedor" method="post" class="max-w-4xl mx-auto p-6 bg-gray-800 rounded-md" id="formcreate">
				<div class="border-b border-gray-700 pb-6">
					<h2 class="text-lg font-semibold leading-7 text-white">Creación de nuevo Proveedor</h2>
				</div>
				<div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-2 lg:grid-cols-3">

					<div>
						<label for="Nombre" class="block text-sm font-medium text-gray-300">Nombre</label>
						<div class="mt-2">
							<input asp-for="Nombre" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div>
						<label for="Telefono" class="block text-sm font-medium text-gray-300">Teléfono</label>
						<div class="mt-2">
							<input asp-for="Telefono" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div>
						<label for="Correo" class="block text-sm font-medium text-gray-300">Correo</label>
						<div class="mt-2">
							<input asp-for="Correo" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div>
						<label for="Direccion" class="block text-sm font-medium text-gray-300">Dirección</label>
						<div class="mt-2">
							<input asp-for="Direccion" type="text" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div>
						<label for="Estado" class="block text-sm font-medium text-gray-300">Estado</label>
						<div class="mt-2">
							<select asp-for="Estado" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
								<option value="true">Activo</option>
								<option value="false">Inactivo</option>
							</select>
						</div>
					</div>
				</div>
				<div class="mt-6 flex justify-end gap-x-4">
					<input asp-for="FK_Usuario_Creacion" value="1" type="hidden" />
					<input asp-for="FK_Usuario_Modificacion" value="1" type="hidden" />
					<button type="submit" id="btnGuardar" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Guardar</button>
					<button asp-action="Index" class="rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-500">Cancelar</button>
				</div>
			</form>
		</div>
	</div>
	<!--                  Final Modal de Crear Tempalte                        -->
	<!--                  Modal de Actualizar Template                        -->
	<div id="modalActuProveedor" class="modal">
		<div class="modal-content">
			<form asp-action="ActualizarProveedor" method="post" class="max-w-4xl mx-auto p-6 bg-gray-800 rounded-md" id="formupdate">
				<div class="border-b border-gray-700 pb-6">
					<h2 class="text-lg font-semibold leading-7 text-white">Actualizar Proveedor</h2>
				</div>
				<div class="mt-6 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
					<div class="sm:col-span-2">
						<label for="Nombre" class="block text-sm font-medium text-gray-300">Nombre</label>
						<div class="mt-2">
							<input asp-for="Nombre" type="text" id="nombre" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div class="sm:col-span-2">
						<label for="Telefono" class="block text-sm font-medium text-gray-300">Teléfono</label>
						<div class="mt-2">
							<input asp-for="Telefono" type="text" id="tel" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div class="sm:col-span-2">
						<label for="Correo" class="block text-sm font-medium text-gray-300">Correo</label>
						<div class="mt-2">
							<input asp-for="Correo" type="text" id="email" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div class="sm:col-span-2">
						<label for="Direccion" class="block text-sm font-medium text-gray-300">Dirección</label>
						<div class="mt-2">
							<input asp-for="Direccion" type="text" id="direccion" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
						</div>
					</div>
					<div class="sm:col-span-2">
						<label for="Estado" class="block text-sm font-medium text-gray-300">Estado</label>
						<div class="mt-2">
							<select asp-for="Estado" id="state" class="block w-full rounded-md bg-gray-900 border-gray-700 text-gray-300 py-2 px-3 shadow-sm focus:ring-2 focus:ring-indigo-500">
								<option value="true">Activo</option>
								<option value="false">Inactivo</option>
							</select>
						</div>
					</div>
				</div>
				<div class="mt-6 flex justify-end gap-x-4">
					<input asp-for="PK_Proveedor" type="text" id="pKProveedor" type="hidden" />
					<input asp-for="FK_Usuario_Creacion" value="1" id="fkUserCrea" type="hidden" />
					<input asp-for="FK_Usuario_Modificacion" value="1" id="fkUserModif" type="hidden" />
					<button type="submit" id="btnActu" class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Guardar</button>
					<button asp-action="Index" class="rounded-md bg-red-600 px-4 py-2 text-sm font-semibold text-white shadow-sm hover:bg-red-500 focus:ring-2 focus:ring-red-500">Cancelar</button>
				</div>
			</form>
		</div>
	</div>

	<!--                  Final Modal de Actualizar Tempalte                        -->

	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>

		// Función para filtrar la tabla de vendedores por nombre
		function filtrarTabla() {
			const nombreVendedor = document.getElementById('nombre_vendedor').value.toLowerCase();
			const filas = document.querySelectorAll('#bodyTablaVendedores tr');

			filas.forEach(fila => {
				const cells = fila.getElementsByTagName('td');
				const matchNombreVendedor = nombreVendedor === '' || cells[1].textContent.toLowerCase().includes(nombreVendedor);

				if (matchNombreVendedor) {
					fila.style.display = '';
				} else {
					fila.style.display = 'none';
				}
			});
		}

		// Agregar evento al campo de texto para filtrar en tiempo real
		document.getElementById('nombre_vendedor').addEventListener('input', filtrarTabla);


		document.getElementById('btnGuardar').addEventListener('click', function (event) {
			event.preventDefault(); // Detener el envío normal del formulario


			// Validar campos requeridos
			var nombre = document.querySelector('[name="Nombre"]').value;
			var telefono = document.querySelector('[name="Telefono"]').value;
			var correo = document.querySelector('[name="Correo"]').value;
			var direccion = document.querySelector('[name="Direccion"]').value;
			var estado = document.querySelector('[name="Estado"]').value;

			if (!nombre || !telefono || !correo || !direccion || !estado) {
				// Mostrar mensaje de error con SweetAlert2 si no están completos los campos
				Swal.fire({
					icon: 'error',
					title: 'Error',
					text: 'Por favor complete todos los campos requeridos.',
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'OK'
				});
			} else {
				// Crear objeto FormData con los datos del formulario
				var formData = new FormData(document.getElementById('formcreate'));

				// Enviar los datos al controlador utilizando fetch
				fetch('/Proveedores/CrearProveedor', {
					method: 'POST',
					body: formData
				})
					.then(response => {
						if (response.ok) {
							// Mostrar mensaje de éxito con SweetAlert2
							Swal.fire({
								icon: 'success',
								title: 'Guardado Correctamente',
								showConfirmButton: true,
								confirmButtonColor: '#3085d6',
								confirmButtonText: 'OK'
							}).then((result) => {
								// Redirigir a la página de índice de proveedores después de guardar
								window.location.href = '/Proveedores/Index';
							});
						} else {
							throw new Error('Error al guardar los datos');
						}
					})
					.catch(error => {
						// Mostrar mensaje de error con SweetAlert2
						Swal.fire({
							icon: 'error',
							title: 'Error',
							text: error.message,
							confirmButtonColor: '#3085d6',
							cancelButtonColor: '#d33',
							confirmButtonText: 'OK'
						});
					});
			}
		});

		/* Metodo de actualizar Proveedor
		Incorporado el 19/7/24 por Joseth Araya
		*/
		document.getElementById('btnActu').addEventListener('click', function (event) {
			event.preventDefault(); // Detener el envío normal del formulario

			// Validar campos requeridos
			var PKProveedor = document.getElementById('pKProveedor').value;
			var nombre = document.getElementById('nombre').value;
			var telefono = document.getElementById('tel').value;
			var correo = document.getElementById('email').value;
			var direccion = document.getElementById('direccion').value;
			var estado = document.getElementById('state').value;
			var FKUsuarioCrea = document.getElementById('fkUserCrea').value;
			var FKUsuarioActu = document.getElementById('fkUserModif').value;

			if (!nombre || !telefono || !correo || !direccion || !estado) {
				// Mostrar mensaje de error con SweetAlert2 si no están completos los campos
				Swal.fire({
					icon: 'error',
					title: 'Error',
					text: 'Por favor complete todos los campos requeridos.',
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'OK'
				});
			} else {
				// Crear objeto FormData con los datos del formulario
				var formData = new FormData(document.getElementById('formupdate'));

				// Enviar los datos al controlador utilizando fetch
				fetch('/Proveedores/ActualizarProveedor', {
					method: 'POST',
					body: formData
				})
					.then(response => {
						if (response.ok) {
							// Mostrar mensaje de éxito con SweetAlert2
							Swal.fire({
								icon: 'success',
								title: 'Guardado Correctamente',
								showConfirmButton: true,
								confirmButtonColor: '#3085d6',
								confirmButtonText: 'OK'
							}).then((result) => {
								// Redirigir a la página de índice de proveedores después de guardar
								window.location.href = '/Proveedores/Index';
							});
						} else {
							throw new Error('Error al guardar los datos');
						}
					})
					.catch(error => {
						// Mostrar mensaje de error con SweetAlert2
						Swal.fire({
							icon: 'error',
							title: 'Error',
							text: error.message,
							confirmButtonColor: '#3085d6',
							cancelButtonColor: '#d33',
							confirmButtonText: 'OK'
						});
					});
			}
		});


		/*Cargar Datos Modal
		 Incorporado el 19/7/24 por Joseth Araya
		*/

		function ActuVarProveedor(PK) {
			console.log("Respuesta   " + PK);
			fetch(`/Proveedores/ObtenerProveedor?PK=${PK}`, {
				method: 'GET'
			})
				.then(response => {
					if (response.ok) {
						return response.json();
					} else {
						throw new Error('Error al obtener el proveedor');
					}
				})
				.then(data => {
					console.log('Datos del proveedor:', data);

					/*Seccion dwe prubas*/
					console.log('Datos del pkProveedor:', data.pK_Proveedor);
					console.log('Datos del nombre:', data.nombre);
					console.log('Datos del telefono:', data.telefono);
					console.log('Datos del correo:', data.correo);
					console.log('Datos del direccion:', data.direccion);
					console.log('Datos del estado:', data.estado);
					console.log('Datos del fkUsuarioCreacion:', data.fkUsuarioCreacion);
					console.log('Datos del fkUsuarioModificacion:', data.fkUsuarioModificacion);

					// Asignación de datos al modal
					document.getElementById('pKProveedor').value = data.pK_Proveedor;
					document.getElementById('nombre').value = data.nombre;
					document.getElementById('tel').value = data.telefono;
					document.getElementById('email').value = data.correo;
					document.getElementById('direccion').value = data.direccion;
					document.getElementById('state').value = data.estado.toString().toLowerCase();
					// if (data.fK_Usuario_Creacion.toString() != null) {
					// 	document.getElementById('fkUserCrea').value = data.fK_Usuario_Creacion.toString();
					// }
					// if (data.fK_Usuario_Modificacion.toString() != null) {
					// 	document.getElementById('fkUserModif').value = data.fK_Usuario_Modificacion.toString();
					// }
					

					// Abrir el modal de actualización
					abrirModal('modalActuProveedor');
				})
				.catch(error => {
					// Mostrar mensaje de error con SweetAlert2 u otra forma
					console.error('Error:', error);
					Swal.fire({
						icon: 'error',
						title: 'Error',
						text: 'Error al obtener los datos del proveedor',
						confirmButtonColor: '#3085d6',
						cancelButtonColor: '#d33',
						confirmButtonText: 'OK'
					});
				});
		}


		//   <!--Inicio Validacion boton eliminar-- >

		document.querySelectorAll('.desactivar-form').forEach(function (form) {
			form.addEventListener('submit', function (event) {
				event.preventDefault(); // Detener el envío normal del formulario

				// Obtener el ID del proveedor desde el formulario
				var pkProveedor = this.querySelector('input[name="PK_Proveedor"]').value;

				// Mostrar mensaje de confirmación con SweetAlert2
				Swal.fire({
					title: '¿Está seguro?',
					text: "El proveedor será desactivado",
					icon: 'warning',
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'Sí, desactivar',
					cancelButtonText: 'Cancelar'
				}).then((result) => {
					if (result.isConfirmed) {
						// Enviar la solicitud para desactivar al controlador de proveedores
						fetch(`/Proveedores/DesactivarProveedor?PK=${pkProveedor}`, {
							method: 'POST'
						})
							.then(response => {
								if (response.ok) {
									// Mostrar mensaje de éxito con SweetAlert2
									Swal.fire({
										icon: 'success',
										title: 'Proveedor desactivado correctamente',
										showConfirmButton: true,
										confirmButtonColor: '#3085d6',
										confirmButtonText: 'OK'
									}).then((result) => {
										// Opcional: Recargar la página o actualizar la lista de proveedores
										location.reload();
									});
								} else {
									throw new Error('Error al desactivar el proveedor');
								}
							})
							.catch(error => {
								// Mostrar mensaje de error con SweetAlert2
								Swal.fire({
									icon: 'error',
									title: 'Error',
									text: error.message,
									confirmButtonColor: '#3085d6',
									cancelButtonColor: '#d33',
									confirmButtonText: 'OK'
								});
							});
					}
				});
			});
		});


		//   <!--Fin Validacion boton eliminar-- >

		//Funcion para paginar en index
		$(document).ready(function () {
			$('#tablaProveedores').DataTable({
				"paging": true, // Habilita la paginación
				"pagingType": "simple_numbers", // Tipo de paginación
				"lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]], // Opciones de cantidad de registros por página
				"searching": false, // Deshabilita la caja de búsqueda
				"language": {
					"lengthMenu": " Mostrar _MENU_ registros por página",
					"zeroRecords": "No se encontraron resultados",
					"info": " Mostrando página _PAGE_ de _PAGES_",
					"infoEmpty": "No hay registros disponibles",
					"infoFiltered": "(filtrado de _MAX_ registros totales)",
					"paginate": {
						"first": "Primero",
						"last": "Último",
						"next": "Siguiente",
						"previous": "Anterior"
					}
				}
			});
		});
	</script>
	<style>
		#tablaProveedores tbody td {
			border-bottom: none;
		}
		/* Cambia el color del texto de la paginación a blanco */
		.dataTables_wrapper .dataTables_paginate .paginate_button,
		.dataTables_wrapper .dataTables_info,
		.dataTables_wrapper .dataTables_length select {
			color: white !important;
		}

			/* Cambia el color al pasar el ratón por encima */
			.dataTables_wrapper .dataTables_paginate .paginate_button:hover {
				color: #ddd !important;
			}

			/* Cambia el color de fondo y el color del texto para el botón de la página actual */
			.dataTables_wrapper .dataTables_paginate .paginate_button.current {
				background-color: #333 !important;
				color: white !important;
			}
	</style>
</body>
</html>