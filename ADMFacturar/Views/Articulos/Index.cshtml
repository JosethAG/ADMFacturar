@using ADM.Models
@using Newtonsoft.Json
@model Articulo

@{
	var articulos = ViewData["Articulos"] as List<Articulo>;
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Ingreso de Articulos</title>
</head>
<body>

	<div class="w-full">
	</div>
	<!--                  Formulario                        -->
	<form>
		<div class="bg-gray-800 text-white p-5 rounded-lg shadow-lg">
			<h2 class="text-lg font-bold mb-4">Filtro de Articulos</h2>
			<div class="grid grid-cols-1 gap-4 sm:grid-cols-6">
				<div class="sm:col-span-1">
					<label for="nombre_articulo" class="block text-sm font-medium leading-6 text-white">Nombre de Articulo</label>
					<div class="mt-1">
						<input type="text" id="nombre_articulo" name="nombre_articulo" class="block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6">
					</div>
				</div>
			</div>
		</div>
	</form>
	<!--Final de From-->
	<div class="w-full mt-8 bg-gray-800 p-6 rounded-lg shadow-lg">
    <div class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-t-lg">
        <h3 class="text-xl font-semibold"><i class="fas fa-list mr-3"></i> Listado de Artículos</h3>
			<button id="btnCreateArt" class="btn bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">Crear Artículo</button>
    </div>
    <!-- Tabla -->
    <div class="overflow-auto mt-4">
        <table id="tablaArticulos" class="min-w-full bg-gray-800 text-white">
            <thead class="bg-gray-900">
                <tr>
                    <th class="py-3 px-4 text-center">Código de Artículo</th>
                    <th class="py-3 px-4 text-center">Descripción de Artículo</th>
                    <th class="py-3 px-4 text-center">Código de Barras</th>
                    <th class="py-3 px-4 text-center">Proveedor</th>
                    <th class="py-3 px-4 text-center">Cantidad</th>
                    <th class="py-3 px-4 text-center">Costo</th>
                    <th class="py-3 px-4 text-center">Precio Unitario</th>
                    <th class="py-3 px-4 text-center">Estado</th>
                    <th class="py-3 px-4 text-center">Acciones</th>
                </tr>
            </thead>
            <tbody id="bodyTablaArticulos" class="text-center">
                @if (articulos != null)
                {
                    @foreach (var articulo in articulos)
                    {
                        <tr class="even:bg-gray-700 hover:bg-gray-600">
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => articulo.PK_Articulo)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => articulo.Descripcion)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => articulo.Codigo_Barras)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => articulo.FK_Proveedor)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => articulo.Cantidad)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => articulo.Costo)</td>
                            <td class="py-3 px-4 border-b border-gray-700">@Html.DisplayFor(modelItem => articulo.Precio)</td>
                            <td class="py-3 px-4 border-b border-gray-700">
                                @if (articulo.Estado == true)
                                {
                                    <span class="bg-green-200 text-green-600 py-1 px-3 rounded-full text-xs">Activo</span>
                                }
                                else
                                {
                                    <span class="bg-red-200 text-red-600 py-1 px-3 rounded-full text-xs">Inactivo</span>
                                }
                            </td>
                            <td>
                                <div class="flex justify-center space-x-2">
										<a onclick="ParsActuArticulo('@articulo.PK_Articulo')" class="bg-blue-500 text-white px-2 py-1 rounded hover:bg-blue-600" title="Editar">
											<i class="fa-solid fa-edit"></i>
                                    </a>
                                    <form method="post" asp-action="DesactivarArticulo" class="desactivar-form">
                                        <input type="hidden" name="PK_Articulo" value="@articulo.PK_Articulo">
											<button type="submit" class="bg-red-500 text-white px-2 py-1 rounded hover:bg-red-600" title="Desactivar">
												<i class="fa-solid fa-trash"></i>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="9" class="py-3 text-center">No hay datos disponibles.</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

	<!--                  Modal de Crear Template                        -->
	<!--Reducción de codigo realizando vista parcial
		Ajuste 7/9/24 por Joseth Araya -->
	<div id="modalCrearArticulo" class="modal">
		<div class="modal-content">
			<div id="contentCrearArt"></div>
		</div>
	</div>
	<!--                  Final Modal de Crear Tempalte                        -->
	<!--                  Modal de Actualizar Template                        -->
	<!--Reducción de codigo realizando vista parcial
		Ajustado por Joseth Araya -->
	<div id="modalActuArticulo" class="modal">
		<div class="modal-content">
			<div id="contentActuArticulo"></div>
		</div>
	</div>
	<!--                  Final Modal de Actualizar Tempalte                        -->

	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<script>

		/* Apertura de modales */
		/*funcion encargada de abrir el modal
		incorporación por Joseth Araya */
		function openModal(idModal) {
			var modal = document.getElementById(idModal);
			modal.style.display = "block";
		}

		/*funcion para abrir modal Crear AJAX para cargar la vista parcial*/
		$(document).ready(function () {
			$("#btnCreateArt").click(function () {
				$("#contentCrearArt").load("/Articulos/_CrearArticulo", function () {
					openModal("modalCrearArticulo");
				});
			});
		});

		function ParsActuArticulo(id) {
			$("#contentActuArticulo").load(`/Articulos/_ActualizarArticulo?id=${id}`, function () {
				openModal("modalActuArticulo");
			});
		};

		// Función para mostrar modal de confirmación de desactivación
		function mostrarConfirmacion(event) {
			event.preventDefault();
			document.getElementById('confirmacionModal').classList.remove('hidden');
			window.confirmarDesactivacion = function () {
				event.target.closest('form').submit();
			};
			window.cancelarDesactivacion = function () {
				document.getElementById('confirmacionModal').classList.add('hidden');
			};

			return false;
		}

		// Función para filtrar la tabla de artículos por nombre
		function filtrarTabla() {
			// Obtener el valor de búsqueda del campo de nombre
			const nombreArticulo = document.getElementById('nombre_articulo').value.toLowerCase();

			// Obtener todas las filas de la tabla
			const filas = document.querySelectorAll('#bodyTablaArticulos tr');

			filas.forEach(fila => {
				const cells = fila.getElementsByTagName('td');
				const matchNombre = cells[1].textContent.toLowerCase().includes(nombreArticulo);

				if (matchNombre) {
					fila.style.display = '';
				} else {
					fila.style.display = 'none';
				}
			});
		}

		// Enlazar evento de input para el campo de nombre de artículo
		document.getElementById('nombre_articulo').addEventListener('input', filtrarTabla);

		// <!-- Inicio Validación botón desactivar -->
		document.querySelectorAll('.desactivar-form').forEach(function (form) {
			form.addEventListener('submit', function (event) {
				event.preventDefault(); // Detener el envío normal del formulario

				// Obtener la PK del Articulo desde el formulario
				var pkArticulo = this.querySelector('input[name="PK_Articulo"]').value;

				// Mostrar mensaje de confirmación con SweetAlert2
				Swal.fire({
					title: '¿Está seguro?',
					text: "¿Desea desactivar este articulo?",
					icon: 'warning',
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'Sí, desactivar',
					cancelButtonText: 'Cancelar'
				}).then((result) => {
					if (result.isConfirmed) {
						// Enviar la solicitud para desactivar el articulo
						fetch(`/Articulos/DesactivarArticulo?PK=${pkArticulo}`, {
							method: 'POST'
						})
							.then(response => {
								if (response.ok) {
									// Mostrar mensaje de éxito con SweetAlert2
									Swal.fire({
										icon: 'success',
										title: 'Articulo desactivado correctamente',
										showConfirmButton: true,
										confirmButtonColor: '#3085d6',
										confirmButtonText: 'OK'
									}).then((result) => {
										// Recargar la página después de desactivar
										location.reload();
									});
								} else {
									throw new Error('Error al desactivar el Cliente');
								}
							})
							.catch(error => {
								// Mostrar mensaje de error con SweetAlert2
								Swal.fire({
									icon: 'error',
									title: 'Error',
									text: error.message,
									confirmButtonColor: '#3085d6',
									cancelButtonColor: '#d33',
									confirmButtonText: 'OK'
								});
							});
					}
				});
			});
		});
		// <!-- Fin Validación botón desactivar -->

		//Funcion para paginar en index
		$(document).ready(function () {
			$('#tablaArticulos').DataTable({
				"paging": true, // Habilita la paginación
				"pagingType": "simple_numbers", // Tipo de paginación
				"lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]], // Opciones de cantidad de registros por página
				"searching": false, // Deshabilita la caja de búsqueda
				"language": {
					"lengthMenu": " Mostrar _MENU_ registros por página",
					"zeroRecords": "No se encontraron resultados",
					"info": " Mostrando página _PAGE_ de _PAGES_",
					"infoEmpty": "No hay registros disponibles",
					"infoFiltered": "(filtrado de _MAX_ registros totales)",
					"paginate": {
						"first": "Primero",
						"last": "Último",
						"next": "Siguiente",
						"previous": "Anterior"
					}
				}
			});
		});

	</script>
	<style>
		#tablaArticulos tbody td {
			border-bottom: none;
		}
		/* Cambia el color del texto de la paginación a blanco */
		.dataTables_wrapper .dataTables_paginate ,
		.dataTables_wrapper .dataTables_info,
		.dataTables_wrapper .dataTables_length select {
			color: white !important;
		}

			/* Cambia el color al pasar el ratón por encima */


			/* Cambia el color de fondo y el color del texto para el botón de la página actual */
			.dataTables_wrapper .dataTables_paginate  {
				background-color: #202c34 !important;
				color: black !important;
			}
	</style>
</body>
</html>