@{
    var vendedores = ViewData["Vendedores"] as List<Vendedor>;
}

<link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">

<div class="max-w-7xl mx-auto p-4">
    <form class="bg-gray-800 p-6 rounded-lg shadow-lg">
        <div class="border-b border-gray-900/10 pb-6">
            <h2 class="text-lg font-semibold leading-7 text-white mb-4">Filtros</h2>
            <div class="grid grid-cols-1 gap-x-6 gap-y-4 sm:grid-cols-4">
                <div class="sm:col-span-1">
                    <label for="fecha_inicio" class="block text-sm font-medium leading-6 text-white">Fecha de Inicio</label>
                    <input type="date" id="fecha_inicio" name="fecha_inicio" class="mt-1 block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                </div>

                <div class="sm:col-span-1">
                    <label for="fecha_final" class="block text-sm font-medium leading-6 text-white">Fecha Final</label>
                    <input type="date" id="fecha_final" name="fecha_final" class="mt-1 block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                </div>

                <div class="sm:col-span-1">
                    <label for="document_number" class="block text-sm font-medium leading-6 text-white">Número Documento</label>
                    <input type="text" id="document_number" name="document_number" class="mt-1 block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white placeholder-gray-400 focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                </div>

                <div class="sm:col-span-1">
                    <label for="cliente" class="block text-sm font-medium leading-6 text-white">Cliente</label>
                    <input type="text" id="cliente" name="cliente" class="mt-1 block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white placeholder-gray-400 focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                </div>

                <div class="sm:col-span-1">
                    <label for="tipo_documento" class="block text-sm font-medium leading-6 text-white">Tipo de Documento</label>
                    <select id="tipo_documento" name="tipo_documento" class="mt-1 block w-full rounded-md bg-gray-700 border-0 py-1.5 text-white focus:ring-2 focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                        <option value="">Seleccione un Tipo</option>
                        <option value="Nota de Crédito">Nota de Crédito</option>
                        <option value="Factura">Factura</option>
                    </select>
                </div>
            </div>
        </div>
    </form>

    <div class="mt-8 bg-gray-800 p-6 rounded-lg shadow-lg">
        <div class="flex justify-between items-center pb-4 border-b border-gray-700">
            <h3 class="text-xl font-semibold text-white">Listado de Facturas</h3>
            <div>
                <a href="/Facturas/AgregarFactura" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">Nueva Factura</a>
            </div>
        </div>
        <div class="overflow-auto mt-4">
            <table class="min-w-full bg-gray-800 text-white">
                <thead class="bg-gray-900">
                    <tr>
                        <th class="py-3 px-4 text-center">Documento</th>
                        <th class="py-3 px-4 text-center">Doc Referencia</th>
                        <th class="py-3 px-4 text-center">Tipo Documento</th>
                        <th class="py-3 px-4 text-center">Fecha</th>
                        <th class="py-3 px-4 text-center">Cliente</th>
                        <th class="py-3 px-4 text-center">Total</th>
                        <th class="py-3 px-4 text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody id="bodyTablaFacturas" class="text-center">
                    <!-- Filas de la tabla -->
                </tbody>
            </table>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>

<script>
    // Función para obtener y listar las facturas desde el backend
    function obtenerYListarFacturas() {
        fetch('/Facturas/ListarFacturas')
            .then(response => response.json())
            .then(data => {
                console.log('Datos recibidos del API:', data);

                // Llenar la tabla con los datos recibidos
                const tableBody = document.getElementById('bodyTablaFacturas');
                tableBody.innerHTML = '';
                data.forEach(item => {
                    const row = `
                                 <tr class="even:bg-gray-700 hover:bg-gray-600">
                                    <td class="py-3 px-4 text-center">${item.documento}</td>
                                    <td class="py-3 px-4 text-center">${item.fac_Referencia}</td>
                                    <td class="py-3 px-4 text-center">${item.tipoDoc}</td>
                                    <td class="py-3 px-4 text-center">${item.fecha}</td>
                                    <td class="py-3 px-4 text-center">${item.cliente}</td>
                                    <td class="py-3 px-4 text-center">₡${item.total}</td>
                                    <td class="py-3 px-4 text-center flex justify-center space-x-2">
                                        ${item.tipoDoc !== 'Nota de Crédito' ? `
                                        <button class="crear-nota-credito bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded" title="Crear nota de Crédito" data-estado="${item.estado}" data-documento="${item.documento}" data-referencia="${item.fac_Referencia}">
                                            <i class="fas fa-credit-card"></i>
                                        </button>
                                        ` : ''}
                                        <button class="bg-green-500 hover:bg-green-600 text-white py-1 px-3 rounded" title="Detalles">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                        <button class="bg-indigo-500 hover:bg-indigo-600 text-white py-1 px-3 rounded" title="Imprimir">
                                            <i class="fas fa-print"></i>
                                        </button>
                                    </td>
                                </tr>
                            `;
                    tableBody.innerHTML += row;
                });

                // Agregar la funcionalidad de filtrado
                document.getElementById('fecha_inicio').addEventListener('input', filtrarTabla);
                document.getElementById('fecha_final').addEventListener('input', filtrarTabla);
                document.getElementById('document_number').addEventListener('input', filtrarTabla);
                document.getElementById('cliente').addEventListener('input', filtrarTabla);
                document.getElementById('tipo_documento').addEventListener('change', filtrarTabla);
            })
            .catch(error => console.error('Error al obtener los datos:', error));
    }

    // Función para filtrar la tabla de facturas por búsqueda
    function filtrarTabla() {
        // Obtener el valor de búsqueda de cada campo
        const fechaInicio = document.getElementById('fecha_inicio').value;
        const fechaFinal = document.getElementById('fecha_final').value;
        const documentNumber = document.getElementById('document_number').value.toLowerCase();
        const cliente = document.getElementById('cliente').value.toLowerCase();
        const tipoDocumento = document.getElementById('tipo_documento').value.toLowerCase();

        // Obtener todas las filas de la tabla
        const filas = document.querySelectorAll('#bodyTablaFacturas tr');

        filas.forEach(fila => {
            const cells = fila.getElementsByTagName('td');
            const matchFechaInicio = fechaInicio === '' || new Date(cells[3].textContent.trim()) >= new Date(fechaInicio);
            const matchFechaFinal = fechaFinal === '' || new Date(cells[3].textContent.trim()) <= new Date(fechaFinal);
            const matchDocumentNumber = documentNumber === '' ||
                cells[0].textContent.toLowerCase().includes(documentNumber) ||  // Busca en la columna "Documento"
                cells[1].textContent.toLowerCase().includes(documentNumber); // Busca en la columna "Doc Referencia"
            const matchCliente = cliente === '' || cells[4].textContent.toLowerCase().includes(cliente);
            const matchTipoDocumento = tipoDocumento === '' || cells[2].textContent.toLowerCase().includes(tipoDocumento);

            if (matchFechaInicio && matchFechaFinal && matchDocumentNumber && matchCliente && matchTipoDocumento) {
                fila.style.display = '';
            } else {
                fila.style.display = 'none';
            }
        });
    }

    // Llamar a obtenerYListarFacturas al cargar la página
    document.addEventListener('DOMContentLoaded', function () {
        obtenerYListarFacturas();
    });

    // Agregar funcionalidad de nota de crédito
    document.addEventListener('click', function (event) {
        if (event.target.closest('.crear-nota-credito')) {
            const button = event.target.closest('.crear-nota-credito');
            const estado = button.getAttribute('data-estado');
            const documento = button.getAttribute('data-documento');
            const referencia = button.getAttribute('data-referencia');
            const filas = document.querySelectorAll('#bodyTablaFacturas tr');

            // Verificar si ya existe una Nota de Crédito aplicada a este documento
            let existeNotaCredito = false;
            filas.forEach(fila => {
                const cells = fila.getElementsByTagName('td');
                if (cells[1].textContent.trim() === documento) {
                    existeNotaCredito = true;
                }
            });

            if (existeNotaCredito) {
                Swal.fire({
                    icon: 'error',
                    title: 'No se puede crear',
                    text: 'Ya existe una nota de crédito aplicada a este documento.',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });
            } else if (estado.toLowerCase() === 'anulada') {
                Swal.fire({
                    icon: 'error',
                    title: 'No se puede editar',
                    text: 'No se puede generar una NC a una factura con estado "anulada".',
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });
            } else {
                window.location.href = `/Facturas/GenerarNC?consecutivo=${documento}`;
            }
        }
    });
</script>
