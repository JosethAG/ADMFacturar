@model SalidaMercaderia

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Salida Mercaderia</title>
    <link href="~/css/custom.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
</head>
<body>
    <form>
        <div class="bg-gray-800 text-white p-5 rounded-lg shadow-lg">
            <h2 class="text-lg font-bold mb-4">Filtros de Búsqueda</h2>
            <div class="grid grid-cols-1 gap-4 sm:grid-cols-6">
                <div class="sm:col-span-1">
                    <label for="entry_date" class="block text-sm font-medium">Fecha Inicio</label>
                    <div class="mt-2">
                        <input type="date" id="entry_date" name="entry_date" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                    </div>
                </div>
                <div class="sm:col-span-1">
                    <label for="expiry_date" class="block text-sm font-medium">Fecha Final</label>
                    <div class="mt-2">
                        <input type="date" id="expiry_date" name="expiry_date" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px;">
                    </div>
                </div>
                <div class="sm:col-span-1">
                    <label for="TipoSalida" class="block text-sm font-medium">Tipo Salida</label>
                    <div class="mt-2">
                        <select asp-for="Tipo_Salida" id="TipoSalida" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px; height: 38px;">
                            <option value="">Seleccione una opción</option>
                            <option value="Daño">Daño</option>
                            <option value="Regalía">Regalía</option>
                            <option value="Ajuste Inventario">Ajuste Inventario</option>
                            <option value="Otro">Otro</option>
                        </select>
                    </div>
                </div>
                <div class="sm:col-span-1">
                    <label for="document_number" class="block text-sm font-medium">Número de Documento</label>
                    <div class="mt-2">
                        <input type="text" id="document_number" name="document_number" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 17px; height: 38px;">
                    </div>
                </div>
                <div class="sm:col-span-1">
                    <label for="estado" class="block text-sm font-medium">Estado</label>
                    <div class="mt-2">
                        <select id="estado" class="block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6" style="padding-left: 10px; height: 38px;">
                            <option value="">Seleccione una opción</option>
                            <option value="Completado">Completado</option>
                            <option value="Pendiente">Pendiente</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </form>

    <div class="w-full mt-8">
        <div class="flex justify-between items-center bg-gray-800 text-white p-4 rounded-t-lg">
            <h3 class="text-xl font-semibold"><i class="fas fa-list mr-3"></i> Listado Salidas de Inventario</h3>
            <div>
                <a href="/Inventario/SalidaInventario" class="btn bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded">Crear Salida de Mercadería</a>
            </div>
        </div>

        <!-- Tabla -->
        <div class="bg-white rounded-b-lg shadow-lg overflow-hidden">
            <table class="min-w-full leading-normal">
                <thead>
                    <tr class="bg-gray-800 text-white">
                        <th class="text-center py-3">Documento</th>
                        <th class="text-center py-3">Fecha Salida</th>
                        <th class="text-center py-3">Tipo Salida</th>
                        <th class="text-center py-3">Observaciones</th>
                        <th class="text-center py-3">Estado</th>
                        <th class="text-center py-3">Acciones</th>
                    </tr>
                </thead>
                <tbody id="bodyTablaIngresos" class="text-gray-700">
                </tbody>
            </table>
        </div>
    </div>

    <script>
        // Función para obtener y listar los ingresos desde el backend
        function obtenerYListarIngresos() {
            fetch('/Inventario/ListarSalidas')
                .then(response => response.json())
                .then(data => {
                    console.log('Datos recibidos del API:', data);

                    // Llenar la tabla con los datos recibidos
                    const tableBody = document.getElementById('bodyTablaIngresos');
                    tableBody.innerHTML = '';

                    data.forEach(item => {
                        const row = `
                                    <tr class="border-b border-gray-200 hover:bg-gray-100">
                                        <td class="py-3 text-center">${item.pK_FK_Documento}</td>
                                        <td class="py-3 text-center">${new Date(item.fecha_Salida).toLocaleDateString()}</td>
                                        <td class="py-3 text-center">${item.tipo_Salida}</td>
                                        <td class="py-3 text-center">${item.observaciones}</td>
                                        <td class="py-3 text-center">${item.estado}</td>
                                        <td class="py-3 text-center">
                                            <div class="flex justify-center space-x-2">
                                               <a href="#" class="text-blue-600 hover:text-blue-900 editar-ingreso" data-documento="${item.pK_FK_Documento}" data-estado="${item.estado}" title="Editar">
                                                   <i class="fas fa-edit"></i>
                                               </a>
                                                <form method="post" action="/Inventario/DesactivarIngreso/${item.pK_FK_Documento}" class="eliminar-form">
                                                   <button type="submit" class="text-red-600 hover:text-red-900 bg-transparent border-none p-0" title="Desactivar">
                                                       <i class="fas fa-trash"></i>
                                                    </button>
                                                    <input type="hidden" name="estado" value="${item.estado}">
                                                    <input type="hidden" name="documento" value="${item.pK_FK_Documento}">
                                                </form>
                                            </div>
                                        </td>
                                    </tr>
                                `;
                        tableBody.innerHTML += row;
                    });

                    // Agregar la funcionalidad de filtrado
                    document.getElementById('entry_date').addEventListener('input', filtrarTabla);
                    document.getElementById('expiry_date').addEventListener('input', filtrarTabla);
                    document.getElementById('TipoSalida').addEventListener('change', filtrarTabla);
                    document.getElementById('document_number').addEventListener('input', filtrarTabla);
                    document.getElementById('estado').addEventListener('change', filtrarTabla);

                    // Agregar la funcionalidad de edición
                    document.querySelectorAll('.editar-ingreso').forEach(function (link) {
                        link.addEventListener('click', function (event) {
                            event.preventDefault(); // Detener el comportamiento predeterminado del enlace

                            // Obtener el estado y el PK del documento desde los atributos data-
                            var estado = this.getAttribute('data-estado');
                            var pkDocumento = this.getAttribute('data-documento');

                            if (estado.toLowerCase() === 'completado') {
                                // Mostrar mensaje de error si el estado es "completado"
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: 'No puedes editar una salida de mercadería completada.',
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Entendido'
                                });
                            } else {
                                // Redirigir a la página de edición con el PK del documento
                                window.location.href = `/Inventario/ActualizarSalida?pkDocumento=${pkDocumento}`;
                            }
                        });
                    });

                    // Agregar la funcionalidad de eliminación con verificación de estado
                    document.querySelectorAll('.eliminar-form').forEach(function (form) {
                        form.addEventListener('submit', function (event) {
                            event.preventDefault(); // Detener el envío normal del formulario

                            // Obtener el estado y el PK del documento desde el formulario
                            var estado = this.querySelector('input[name="estado"]').value;
                            var pkDocumento = this.querySelector('input[name="documento"]').value; // Obtener el valor desde el atributo data-documento

                            if (estado.toLowerCase() === 'completado') {
                                // Mostrar mensaje de error si el estado es "aplicado"
                                Swal.fire({
                                    icon: 'error',
                                    title: 'No se puede eliminar',
                                    text: 'No se puede eliminar una salida con estado "completado".',
                                    confirmButtonColor: '#3085d6',
                                    confirmButtonText: 'OK'
                                });
                            } else {
                                // Mostrar mensaje de confirmación con SweetAlert2
                                Swal.fire({
                                    title: '¿Está seguro?',
                                    text: "No podrá revertir esto",
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Sí, eliminar',
                                    cancelButtonText: 'Cancelar'
                                }).then((result) => {
                                    if (result.isConfirmed) {
                                        // Enviar el formulario al controlador
                                        fetch(`/Inventario/EliminarSalida/?pkDocumento=${pkDocumento}`, {
                                            method: 'POST'
                                        })
                                            .then(response => {
                                                if (response.ok) {
                                                    // Mostrar mensaje de éxito con SweetAlert2
                                                    Swal.fire({
                                                        icon: 'success',
                                                        title: 'Salida de inventario eliminada correctamente',
                                                        showConfirmButton: true,
                                                        confirmButtonColor: '#3085d6',
                                                        confirmButtonText: 'OK'
                                                    }).then((result) => {
                                                        // Recargar la página después de eliminar
                                                        location.reload();
                                                    });
                                                } else {
                                                    throw new Error('Error al eliminar el ingreso');
                                                }
                                            })
                                            .catch(error => {
                                                // Mostrar mensaje de error con SweetAlert2
                                                Swal.fire({
                                                    icon: 'error',
                                                    title: 'Error',
                                                    text: error.message,
                                                    confirmButtonColor: '#3085d6',
                                                    confirmButtonText: 'OK'
                                                });
                                            });
                                    }
                                });
                            }
                        });
                    });
                })
                .catch(error => {
                    console.error('Error al obtener los ingresos:', error);
                    // Mostrar un mensaje de error en caso de fallo
                    const errorDiv = document.getElementById('error-message');
                    if (errorDiv) {
                        errorDiv.textContent = 'Error al obtener los ingresos. Por favor, inténtelo de nuevo más tarde.';
                    } else {
                        console.error('Elemento error-message no encontrado en el DOM.');
                    }
                });
        }


        // Función para filtrar la tabla de ingresos por búsqueda
        function filtrarTabla() {
            // Obtener el valor de búsqueda de cada campo
            const entryDate = document.getElementById('entry_date').value;
            const expiryDate = document.getElementById('expiry_date').value;
            const tipoSalida = document.getElementById('TipoSalida').value.toLowerCase();
            const documentNumber = document.getElementById('document_number').value.toLowerCase();
            const estado = document.getElementById('estado').value.toLowerCase();

            // Obtener todas las filas de la tabla
            const filas = document.querySelectorAll('#bodyTablaIngresos tr');

            filas.forEach(fila => {
                const cells = fila.getElementsByTagName('td');
                const fechaSalida = new Date(cells[1].textContent.trim().split('/').reverse().join('-')); // Convertir a formato YYYY-MM-DD
                const matchEntryDate = entryDate === '' || fechaSalida >= new Date(entryDate);
                const matchExpiryDate = expiryDate === '' || fechaSalida <= new Date(expiryDate);
                const matchTipoSalida = tipoSalida === '' || cells[2].textContent.toLowerCase().includes(tipoSalida);
                const matchDocumentNumber = documentNumber === '' || cells[0].textContent.toLowerCase().includes(documentNumber);
                const matchEstado = estado === '' || cells[4].textContent.toLowerCase().includes(estado);

                if (matchEntryDate && matchExpiryDate && matchTipoSalida && matchDocumentNumber && matchEstado) {
                    fila.style.display = '';
                } else {
                    fila.style.display = 'none';
                }
            });
        }

        // Llamar a obtenerYListarIngresos al cargar la página
        document.addEventListener('DOMContentLoaded', obtenerYListarIngresos);
    </script>
</body>
</html>
